<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiaoWangOK</title>
  
  
  <link href="https://xiaowangok.github.io/atom.xml" rel="self"/>
  
  <link href="https://xiaowangok.github.io/"/>
  <updated>2022-11-28T14:08:18.482Z</updated>
  <id>https://xiaowangok.github.io/</id>
  
  <author>
    <name>XiaoWangOK</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot中的统一异常处理</title>
    <link href="https://xiaowangok.github.io/2022/11/27/SpringBoot%E4%B8%AD%E7%9A%84%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    <id>https://xiaowangok.github.io/2022/11/27/SpringBoot%E4%B8%AD%E7%9A%84%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</id>
    <published>2022-11-27T14:25:29.000Z</published>
    <updated>2022-11-28T14:08:18.482Z</updated>
    
    <content type="html"><![CDATA[<p>对自己学习过程中遇到的统一异常处理做如下记录。</p><h2 id="全局异常处理、特定异常处理"><a href="#全局异常处理、特定异常处理" class="headerlink" title="全局异常处理、特定异常处理"></a>全局异常处理、特定异常处理</h2><ol><li>创建异常处理类，并添加注解<code>@ControllerAdvice</code>，原理上是使用AOP，在不改变原先代码的基础上就能处理异常</li><li>在异常类内创建异常处理方法，添加注解<code>@ExceptionHandler</code></li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>xw<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>result<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ControllerAdvice<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ExceptionHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//全局异常处理</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span> <span class="token comment" spellcheck="true">//或者在类上使用@RestControllerAdvice</span>    <span class="token keyword">public</span> Result <span class="token function">error</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Exception"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token string">"执行全局异常处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//特定异常处理</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>ArithmeticException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> Result <span class="token function">error</span><span class="token punctuation">(</span>ArithmeticException e<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ArithmeticException"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token string">"执行ArithmeticException异常处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="自定义异常处理"><a href="#自定义异常处理" class="headerlink" title="自定义异常处理"></a>自定义异常处理</h2><ol><li><p>创建自定义异常类，继承<code>RuntimeException</code></p></li><li><p>自定义异常类创建属性(异常码、异常信息等)</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>xw<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>AllArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GgktException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer code<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre></li><li><p>在全局异常处理类添加自定义异常处理方法</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>xw<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>result<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ControllerAdvice<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ExceptionHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//自定义异常类的处理</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>GgktException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> Result <span class="token function">error</span><span class="token punctuation">(</span>GgktException e<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"GgktException"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre></li><li><p>在业务代码内手动抛出异常，自定义（非jdk自带）异常需要手动抛出</p><pre class=" language-java"><code class="language-java"><span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">GgktException</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token string">"执行自定义异常处理GgktException"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对自己学习过程中遇到的统一异常处理做如下记录。&lt;/p&gt;
&lt;h2 id=&quot;全局异常处理、特定异常处理&quot;&gt;&lt;a href=&quot;#全局异常处理、特定异常处理&quot; class=&quot;headerlink&quot; title=&quot;全局异常处理、特定异常处理&quot;&gt;&lt;/a&gt;全局异常处理、特定异常处理&lt;/h</summary>
      
    
    
    
    <category term="SpringBoot" scheme="https://xiaowangok.github.io/categories/SpringBoot/"/>
    
    
    <category term="异常处理" scheme="https://xiaowangok.github.io/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客问题记录</title>
    <link href="https://xiaowangok.github.io/2022/11/21/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://xiaowangok.github.io/2022/11/21/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2022-11-21T15:20:53.000Z</published>
    <updated>2022-11-28T14:45:01.651Z</updated>
    
    <content type="html"><![CDATA[<p>记录使用hexo搭建自己的博客时遇到的问题。</p><h2 id="theme主题"><a href="#theme主题" class="headerlink" title="theme主题"></a>theme主题</h2><p>使用了pure主题，使用文档见 <a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md</a></p><h2 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h2><ol><li><p>资源文件夹</p><p> 在hexo中使用文章资源文件夹需要在配置文件<code>_config.yaml</code>增加配置：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p> 配置后使用命令 <code>hexo new &quot;demo_test&quot;</code> 创建文章的同时会为该文章生成一个名为 <code>demo_test</code> 的文件夹可以用来存放图片</p></li><li><p>图片引用</p><p> 在markdown文件的编辑器中，使用 <code>![](./demo_test/image.jpg)</code> 即可正常显示图片。但是hexo中的文章经过 <code>hexo generate</code> 后产生的文章及图片情况如下图所示<br> <img src="/2022/11/21/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/dir.png"><br> 所以使用 <code>![](image.jpg)</code>就OK了吗？并不是。。。hexo生成的html中对图片的引用为 <code>/image.jpg</code> ，但是默认的 <code>/</code> 根目录为 <code>public</code>，所以获取不到 <code>image.jpg</code>，可以通过插件来解决。</p><p> <strong>安装插件</strong></p><pre class=" language-shell"><code class="language-shell">npm install hexo-renderer-marked --save</code></pre><p> <strong>_config.yaml</strong></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">marked</span><span class="token punctuation">:</span><span class="token key atrule">prependRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">postAsset</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p> <code>hexo-renderer-marked</code> 插件会在hexo生成的<strong>html</strong>文件中给图片的引用追加前缀，例如 <code>&lt;img src=&quot;/2022/11/17/demo_test/image.jpg&quot;&gt;</code>。<br> 这时候，md文件中只需要用 <code>![](image.jpg)</code> 引入图片就行了。</p></li></ol><h2 id="博客的评论怎么用"><a href="#博客的评论怎么用" class="headerlink" title="博客的评论怎么用"></a>博客的评论怎么用</h2><p>我在博客中使用的是 <a href="https://github.com/gitalk/gitalk">GitTalk</a>，文档地址<a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p><ol><li><p>引入</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://unpkg.com/gitalk/dist/gitalk.css"</span><span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"//cdn.jsdelivr.net/npm/gitalk@1.6.2/dist/gitalk.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li><li><p>创建github应用<br> <img src="/2022/11/21/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/oath.png"></p></li><li><p>配置<br> 在pure主题的_config.yaml</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">comment</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> gitalk  <span class="token comment" spellcheck="true"># 启用哪种评论系统</span>    <span class="token key atrule">gitalk</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># gitalk. https://gitalk.github.io/</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">owner</span><span class="token punctuation">:</span> XiaoWangOK <span class="token comment" spellcheck="true">#必须. GitHub repository 所有者，可以是个人或者组织。</span>    <span class="token key atrule">admin</span><span class="token punctuation">:</span> XiaoWangOK <span class="token comment" spellcheck="true">#必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span>    <span class="token key atrule">repo</span><span class="token punctuation">:</span> XiaoWangOK.github.io <span class="token comment" spellcheck="true">#必须. GitHub repository.</span>    <span class="token key atrule">ClientID</span><span class="token punctuation">:</span> 42*<span class="token important">*1</span><span class="token important">*57</span><span class="token important">*98</span>*<span class="token important">*1</span><span class="token important">*fe</span><span class="token important">*25</span> <span class="token comment" spellcheck="true">#必须. GitHub Application Client ID.</span>    <span class="token key atrule">ClientSecret</span><span class="token punctuation">:</span> 147*<span class="token important">*9cb54b</span>**<span class="token important">*d3c</span><span class="token important">*405</span><span class="token important">*f061</span>**<span class="token important">*120b</span><span class="token important">*da</span>*<span class="token important">*f6</span> <span class="token comment" spellcheck="true">#必须. GitHub Application Client Secret.</span>    <span class="token key atrule">enableHotKey</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">proxy</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//xxx.*****.workers.dev/https<span class="token punctuation">:</span>//github.com/login/oauth/access_token    <span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN</code></pre></li><li><p>使用</p><p> 文件gitalk.ejs，引入gitalk<br> 过程中遇到的坑可借鉴文章<a href="https://zhuanlan.zhihu.com/p/350735142">https://zhuanlan.zhihu.com/p/350735142</a></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">'undefined'</span> <span class="token operator">&amp;&amp;</span> script<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://unpkg.com/gitalk/dist/gitalk.css"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"//cdn.jsdelivr.net/npm/gitalk@1.6.2/dist/gitalk.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"//cdn.jsdelivr.net/npm/blueimp-md5@2.10.0/js/md5.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token keyword">var</span> gitalk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gitalk</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        clientID<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.ClientID %>'</span><span class="token punctuation">,</span>        clientSecret<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.ClientSecret %>'</span><span class="token punctuation">,</span>        repo<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.repo %>'</span><span class="token punctuation">,</span>        owner<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.owner %>'</span><span class="token punctuation">,</span>        admin<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'&lt;%= theme.comment.gitalk.admin %>'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        id<span class="token punctuation">:</span> <span class="token function">md5</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">,</span>        distractionFreeMode<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        language<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.language %>'</span><span class="token punctuation">,</span>        enableHotKey<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.enableHotKey %>'</span><span class="token punctuation">,</span>        proxy<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.comment.gitalk.proxy %>'</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    gitalk<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'comments'</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span></code></pre></li><li><p>踩坑</p><p> <em><strong>Gitalk进行Github的Oauth认证无法跨域获取Token问题解决</strong></em></p><p> 缺少CORS代理服务，登陆时会出现网络错误 Error: Network Error 或者 403异常。解决方式在：<strong>Cloudflare <a href="https://dash.cloudflare.com/login/">https://dash.cloudflare.com/login/</a> 上创建一个免费的在线代理来解决gitalk授权登录跨域问题，利用CloudFlare Worker创建在线代理</strong>，参考了很有效的文章：<a href="https://www.cnblogs.com/WeiyiGeek/p/16597538.html">https://www.cnblogs.com/WeiyiGeek/p/16597538.html</a></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录使用hexo搭建自己的博客时遇到的问题。&lt;/p&gt;
&lt;h2 id=&quot;theme主题&quot;&gt;&lt;a href=&quot;#theme主题&quot; class=&quot;headerlink&quot; title=&quot;theme主题&quot;&gt;&lt;/a&gt;theme主题&lt;/h2&gt;&lt;p&gt;使用了pure主题，使用文档见 &lt;a h</summary>
      
    
    
    
    <category term="博客" scheme="https://xiaowangok.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://xiaowangok.github.io/tags/hexo/"/>
    
    <category term="博客" scheme="https://xiaowangok.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>This is For Suki Zhu</title>
    <link href="https://xiaowangok.github.io/2022/11/17/this-is-test/"/>
    <id>https://xiaowangok.github.io/2022/11/17/this-is-test/</id>
    <published>2022-11-17T15:34:03.000Z</published>
    <updated>2022-11-17T16:38:05.755Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-hello"><a href="#1-hello" class="headerlink" title="1.hello"></a>1.hello</h2><p>啊啊啊~好美的照片！！！</p><h2 id="2-hi"><a href="#2-hi" class="headerlink" title="2.hi"></a>2.hi</h2><p>zuozuo~</p><p><img src="/2022/11/17/this-is-test/us.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-hello&quot;&gt;&lt;a href=&quot;#1-hello&quot; class=&quot;headerlink&quot; title=&quot;1.hello&quot;&gt;&lt;/a&gt;1.hello&lt;/h2&gt;&lt;p&gt;啊啊啊~好美的照片！！！&lt;/p&gt;
&lt;h2 id=&quot;2-hi&quot;&gt;&lt;a href=&quot;#2-hi&quot; cla</summary>
      
    
    
    
    
    <category term="love" scheme="https://xiaowangok.github.io/tags/love/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://xiaowangok.github.io/2022/11/17/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xiaowangok.github.io/2022/11/17/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-11-17T08:25:14.000Z</published>
    <updated>2022-11-18T08:22:39.603Z</updated>
    
    <content type="html"><![CDATA[<h2 id="猪猪"><a href="#猪猪" class="headerlink" title="猪猪"></a>猪猪</h2><p>太baby辣~</p><hr><h2 id="略略略"><a href="#略略略" class="headerlink" title="略略略"></a>略略略</h2><p>zuozuo~</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><hr><!-- ![]() -->]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;猪猪&quot;&gt;&lt;a href=&quot;#猪猪&quot; class=&quot;headerlink&quot; title=&quot;猪猪&quot;&gt;&lt;/a&gt;猪猪&lt;/h2&gt;&lt;p&gt;太baby辣~&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;略略略&quot;&gt;&lt;a href=&quot;#略略略&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="test" scheme="https://xiaowangok.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://xiaowangok.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiaowangok.github.io/2022/11/17/hello-world/"/>
    <id>https://xiaowangok.github.io/2022/11/17/hello-world/</id>
    <published>2022-11-17T08:24:04.113Z</published>
    <updated>2022-11-17T08:24:04.113Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
